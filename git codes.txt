mkdir - hacer directorio  ls - lista  ls -al Enlistar incluyendo archivos ocultos  touch vacio.txt Crea él archivo vacio.txt  history - todos los comandos que has hecho  !22 repite él comando número 22  rm vacio.txt Borra él archivo CUIDADO  cat historia.txt  Te deja ver que tienes escrito en él archivo   git init empiezar la configuracion de git  git status Muestra los archivos y su estado  git add historia.txt Agrega él archivo  git add .   punto es la carpeta actual y te agrega él archivo para después darle commit  git log historia.txt   te muestra todo lo que se le ha hecho  git commit -m “Poner texto explicativo cómo buena practica”  git config - lista de opciones para configurar  git config --list   Lista de opciones en lista  git config --list --show-origin   Muestra donde están las configuraciones guardadas  git config --global user.name "Laura Badillo" git config --global user.email "badillo_laura@yahoo.com"  git show   Te muestra todos los cambios  HEAD -->  master   Te muestra la ultima version  Escape + Shift + zeta zeta   forza él envio del commit porque guarda él archivo  Vim Editor de texto de linea de comandos, si la linea empieza con # son comentarios, Para empezar a escribir aprietas Escape y la letra i  git diff copias pegas él número del commit y luego él 2do número del commit y los va a comparar  git reset f7f07abae2e650bd20a3580e1eb5728f4ccd1769 --soft vuelves a la version anterior pero stage queda igual  git reset f7f07abae2e650bd20a3580e1eb5728f4ccd1769 --hard TODO se vuelte a la version que pides   code historia.txt  git log se ve que se borro todo 
 git init >> crear repositorio  git add .  >> preparas archivos  git commit -m “comentario” >> hacer commit  git remote add origin https://github.com/laurabadillo/proyBedu01.git git push -u origin master (que es él nombre del branch), te pide username y pwd  pull request - es para hacer un fix de alguien y solicitas que haga commit para su proyecto  origin es él archivo original en él branch  git checkout -b guiaDeComandos >> para crear un branch  git checkout nombreDelBranch >> para cambiar de branch  git checkout -d nombreDelBranch >> Eliminar  merge > une 2 branches  git pull >> descargar cambios  git merge nombreDelBranch >> para fusionar 2 branches  git diff miBranch targetBranch - Comparar branch  git status - En que branch estoy  git log  - Ver commits  git reset -hard origin/master - Eliminar commits previos  git clone urlDelServidor -- para clonar remoto  git clone c://user/Documents/Proyecto -- para clonar localmente  rm >> remover archivos CUIDADO rm -rfv nombredelaCarpeta >> remover carpetas CUIDADO 
EN terminal poner EXIT 
